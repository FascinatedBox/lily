#ifndef LILY_RANDOM_BINDINGS_H
#define LILY_RANDOM_BINDINGS_H
/* Generated by lily-bindgen, do not edit. */

#if defined(_WIN32) && !defined(LILY_NO_EXPORT)
#define LILY_RANDOM_EXPORT __declspec(dllexport)
#else
#define LILY_RANDOM_EXPORT
#endif

typedef struct lily_random_Random_ {
    LILY_FOREIGN_HEADER
    uint32_t state[MTWIST_N];
    uint32_t *next;
    int remaining;
} lily_random_Random;
#define ARG_Random(state, index) \
(lily_random_Random *)lily_arg_generic(state, index)
#define AS_Random(v_)\
((lily_random_Random *)(lily_as_generic(v_)))
#define ID_Random(state) lily_cid_at(state, 0)
#define INIT_Random(state)\
(lily_random_Random *) lily_push_foreign(state, ID_Random(state), (lily_destroy_func)destroy_Random, sizeof(lily_random_Random))

LILY_RANDOM_EXPORT
const char *lily_random_info_table[] = {
    "\01Random\0"
    ,"C\02Random\0"
    ,"m\0<new>\0(*Integer): Random"
    ,"m\0between\0(Random,Integer,Integer): Integer"
    ,"Z"
};
#define LILY_DECLARE_RANDOM_CALL_TABLE \
LILY_RANDOM_EXPORT \
lily_call_entry_func lily_random_call_table[] = { \
    NULL, \
    NULL, \
    lily_random_Random_new, \
    lily_random_Random_between, \
};
#endif

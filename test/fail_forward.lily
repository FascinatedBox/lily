import test

var t = test.t

t.scope(__file__)

t.interpret_for_error("End of class with unresolved forward.",
    """\
    SyntaxError: Reached end of class with unresolved forward(s):\n\
    * Test.f at line 2\n    \
        from test\/[subinterp]:4:\
    """,
    """\
    class Test {
        forward public define f(Integer) { ... }
    }
    """)

t.render_for_error("End tag with unresolved forward.",
    """\
    SyntaxError: Reached end of module with unresolved forward(s):\n\
    * f at line 1\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    <?lily forward define f(String): String { ... } ?>
    """)

t.interpret_for_error("Imported file has unresolved forwards.",
    """\
    SyntaxError: Reached end of module with unresolved forward(s):\n\
    * h at line 3\n\
    * g at line 2\n\
    * f at line 1\n    \
        from test\/import_dir\/unresolved_forward.lily:3:\
    """,
    """\
    import "import_dir/unresolved_forward"
    """)

t.interpret_for_error("Import with an unresolved forward.",
    """\
    SyntaxError: Cannot use 'import' when there are unresolved forward(s):\n\
    * f at line 1\n    \
        from test\/[subinterp]:2:\
    """,
    """\
    forward define f { ... }
    import import_dir/var_access
    """)

t.interpret_for_error("End of first file with unresolved forwards.",
    """\
    SyntaxError: Reached end of module with unresolved forward(s):\n\
    * f at line 1\n    \
        from test\/[subinterp]:2:\
    """,
    """\
    forward define f(String): String { ... }
    """)

t.interpret_for_error("Class property decl with unresolved forward.",
    """\
    SyntaxError: Cannot declare a class property when there are unresolved forward(s):\n\
    * Test.f at line 2\n    \
        from test\/[subinterp]:3:\
    """,
    """\
    class Test {
        forward public define f(Integer) { ... }
        public var @x = 10
    }
    """)

t.interpret_for_error("Toplevel var decl with unresolved forward.",
    """\
    SyntaxError: Cannot declare a global var when there are unresolved forward(s):\n\
    * f at line 1\n    \
        from test\/[subinterp]:2:\
    """,
    """\
    forward define f { ... }
    var v = 10
    define f { }
    """)

t.interpret_for_error("Inconsistent resolution of a forward method (scope only).",
    """\
    SyntaxError: Wrong qualifiers in resolution of Test.f (expected: protected).\n    \
        from test\/[subinterp]:3:\
    """,
    """\
    class Test {
        forward protected define f(Integer) { ... }
        public define f(a: Integer) {}
    }
    """)

t.interpret_for_error("Inconsistent resolution of a forward method (with static).",
    """\
    SyntaxError: Wrong qualifiers in resolution of Test.f (expected: private static).\n    \
        from test\/[subinterp]:3:\
    """,
    """\
    class Test {
        forward private static define f(Integer) { ... }
        private define f(a: Integer) {}
    }
    """)

t.interpret_for_error("Inconsistent forward resolution (type).",
    """\
    SyntaxError: Declaration does not match prior forward declaration at line 2.\n\
    Expected: Function (Test, Integer)\n\
    Received: Function (Test, String)\n    \
        from test\/[subinterp]:3:\
    """,
    """\
    class Test {
        forward public define f(Integer) { ... }
        public define f(a: String) {}
    }
    """)

t.interpret_for_error("Non-toplevel define with forward.",
    """\
    SyntaxError: 'forward' qualifier is only for toplevel functions and methods.\n    \
        from test\/[subinterp]:2:\
    """,
    """\
    define f {
        forward define g {
        }
    }
    """)

t.interpret_for_error("Forward with keyargs.",
    """\
    SyntaxError: Forward declarations not allowed to have keyword arguments.\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    forward define f(:a Integer) { ... }
    """)

t.interpret_for_error("Duplicate forward (toplevel).",
    """\
    SyntaxError: A forward declaration for f already exists.\n    \
        from test\/[subinterp]:2:\
    """,
    """\
    forward define f(Integer) { ... }
    forward define f(Integer) { ... }
    """)

t.interpret_for_error("Duplicate forward (class).",
    """\
    SyntaxError: A forward declaration for f already exists.\n    \
        from test\/[subinterp]:3:\
    """,
    """\
    class Example {
        forward public define f(Integer) { ... }
        forward public define f(Integer) { ... }
    }
    """)

t.interpret_for_error("Class forward collides with toplevel define.",
    """\
    SyntaxError: f has already been declared.\n    \
        from test\/[subinterp]:4:\
    """,
    """\
    define f {}

    class Example {
        forward public define f(Integer) { ... }
    }
    """)

t.interpret_for_error("Expect ... in a forward.",
    """\
    SyntaxError: Expected '...', not '+'.\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    forward define f { + }
    """)

t.interpret_for_error("Expect } after ... in a forward.",
    """\
    SyntaxError: Expected '}', not '+'.\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    forward define f { ... +
    """)

t.interpret_for_error("Forbid 'forward var'.",
    """\
    SyntaxError: Cannot use 'forward' with 'var'.\n    \
        from test\/[subinterp]:2:\
    """,
    """\
    class Example {
        forward public var @x = 10
    }
    """)

t.interpret_for_error("Verify error with 'forward' xyz.",
    """\
    SyntaxError: Expected 'define', but got 'xyz'.\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    forward xyz
    """)

t.interpret_for_error("Cover forward error with public.",
    """\
    SyntaxError: Wrong qualifiers in resolution of Example.f (expected: public).\n    \
        from test\/[subinterp]:3:\
    """,
    """\
    class Example {
        forward public define f { ... }
        protected define f {}
    }
    """)

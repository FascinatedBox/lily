import (Interpreter,
        TestCase) "../t/testing"

class TestVerifyTemplate < TestCase
{
    public define test_basics
    {
        var t = Interpreter()

        # basics (basic template usage)

        assert_render_string(t, """\
            <?lily    ?>\
        """)

        # basics (multiple valid template tag)

        t = Interpreter()

        assert_render_string(t, """\
            <?lily ?>\
            <?lily ?>\
            <?lily ?>\
        """)

        # basics (use globals from old scope)

        t = Interpreter()

        assert_render_string(t, """\
            <?lily var v = 10 ?>\
            <?lily v += 1 ?>\
            <?lily if v != 11: { raise ValueError("") } ?>\
        """)

        # basics (template with content after)

        t = Interpreter()

        assert_render_string(t, """\
            <?lily ?>
            test
        """)

        # basics (template that will need to render the body)

        t = Interpreter()

        assert_render_string(t, """\
            <?lily ?>
            Lorem Ipsum is simply dummy text of the printing and typesetting
            industry. Lorem Ipsum has been the industry's standard dummy text
            ever since the 1500s, when an unknown printer took a galley of type
            and scrambled it to make a type specimen book. It has survived not
            only five centuries, but also the leap into electronic typesetting,
            remaining essentially unchanged. It was popularised in the 1960s
            with the release of Letraset sheets containing Lorem Ipsum passages,
            and more recently with desktop publishing software like Aldus
            PageMaker including versions of Lorem Ipsum. Lorem Ipsum is simply
            dummy text of the printing and typesetting industry. Lorem Ipsum has
            been the industry's standard dummy text ever since the 1500s, when
            an unknown printer took a galley of type and scrambled it to make a
            type specimen book. It has survived not only five centuries, but
            also the leap into electronic typesetting, remaining essentially
            unchanged. It was popularised in the 1960s with the release of
            Letraset sheets containing Lorem Ipsum passages, and more recently
            with desktop publishing software like Aldus PageMaker including
            versions of Lorem Ipsum.
            <?lily ?>
        """)
    }

    public define test_failure
    {
        var t = Interpreter()

        # failure (content must start with template tag)

        assert_render_fails(t, """\
            SyntaxError: Files in template mode must start with '<?lily'.\n    \
                from [test]:1:\n\
        """,
        """\
            print(1)
        """)

        # failure (content has to start with the full template tag)

        assert_render_fails(t, """\
            SyntaxError: Files in template mode must start with '<?lily'.\n    \
                from [test]:1:\n\
        """,
        """\
            <?lil print(1) ?>
        """)

        # failure (second template pass fails)

        t = Interpreter()
        assert_render_fails(t, """\
            DivisionByZeroError: Attempt to divide by zero.\n\
            Traceback:\n    \
                from [test]:1: in __main__\n\
        """,
        """\
            <?lily ?><?lily 0 / 0?>
        """)

        # failure (finish with eof)

        t = Interpreter()
        assert_render_fails(t, """\
            SyntaxError: Unexpected token 'end of file'.\n    \
                from [test]:1:\n\
        """,
        """\
            <?lily\
        """)

        # failure (end tag with pending blocks)

        t = Interpreter()
        assert_render_fails(t, """\
            SyntaxError: Unexpected token '?>'.\n    \
                from [test]:1:\n\
        """,
        """\
            <?lily define f { ?>
        """)
    }
}

import test

var t = test.t

t.scope(__file__)

t.interpret_for_error("Verify function inputs are contravariant.",
    """\
    SyntaxError: Cannot assign type 'Function (Two)' to type 'Function (One)'.\n    \
        from test\/[subinterp]:8:\
    """,
    """\
    class One {}
    class Two < One {}

    define f(a: One) {}
    define g(a: Two) {}

    var v = f
        v = g
    """)

t.interpret_for_error("Verify 'x.y' method calls, in case 'y' is a static method.",
    """\
    SyntaxError: Argument #1 to File.open is invalid:\n\
    Expected Type: String\n\
    Received Type: File\n    \
        from test\/[subinterp]:1:\
    """,
    """\
    stdin.open("r")
    """)

t.interpret_for_error("Verify that lists are not covariant.",
    """\
    SyntaxError: Cannot assign type 'List[Two]' to type 'List[One]'.\n    \
        from test\/[subinterp]:7:\
    """,
    """\
    class One {}
    class Two < One {}

    var v = [[One()]]
    var v2 = [Two()]
    # Assignment is naturally covariant. However, lists are invariant.
    v[0] = v2
    """)

t.interpret_for_error("Verify optarg narrowing doesn't narrow away required args.",
    """\
    SyntaxError: Cannot assign type 'Function (Integer)' to type 'Function (Integer, Integer, *Integer)'.\n    \
        from test\/[subinterp]:5:\
    """,
    """\
    define f(a: Integer, b: Integer, c: *Integer=10) {}
    define g(a: Integer) {}

    var a = f
    a = g
    """)

t.interpret_for_error("Fail to unify the elements of a List.",
    """\
    SyntaxError: List elements do not have a consistent type.\n\
    Expected Type: Integer\n\
    Received Type: String\n    \
        from test/[subinterp]:1:\
    """,
    """\
    var v = [1, "2"]
    """)

t.interpret_for_error("Fail to unify the values of a Hash.",
    """\
    SyntaxError: Hash values do not have a consistent type.\n\
    Expected Type: Integer\n\
    Received Type: String\n    \
        from test/[subinterp]:1:\
    """,
    """\
    var v = [1 => 1, 2 => "2"]
    """)

t.interpret_for_error("Fail to unify the keys of a Hash.",
    """\
    SyntaxError: Hash keys do not have a consistent type.\n\
    Expected Type: Integer\n\
    Received Type: String\n    \
        from test/[subinterp]:1:\
    """,
    """\
    var v = [1 => 1, "2" => 2]
    """)
